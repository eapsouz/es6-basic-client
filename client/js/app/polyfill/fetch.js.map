{"version":3,"sources":["../../app-es6/polyfill/fetch.js"],"names":["self","fetch","support","searchParams","iterable","Symbol","blob","Blob","e","formData","arrayBuffer","viewClasses","isDataView","obj","DataView","prototype","isPrototypeOf","isArrayBufferView","ArrayBuffer","isView","indexOf","Object","toString","call","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","shift","done","undefined","Headers","headers","map","forEach","append","Array","isArray","header","getOwnPropertyNames","oldValue","get","has","hasOwnProperty","set","callback","thisArg","keys","push","values","entries","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","Uint8Array","chars","length","i","fromCharCode","join","bufferClone","slice","byteLength","buffer","Body","_initBody","_bodyInit","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","Error","type","rejected","then","text","decode","json","JSON","parse","methods","normalizeMethod","method","upcased","toUpperCase","Request","input","options","url","credentials","mode","referrer","clone","form","trim","split","bytes","replace","decodeURIComponent","parseHeaders","rawHeaders","preProcessedHeaders","line","parts","key","Response","bodyInit","status","ok","statusText","response","redirectStatuses","redirect","RangeError","location","init","request","xhr","XMLHttpRequest","getAllResponseHeaders","responseURL","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill"],"mappings":"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","file":"fetch.js","sourcesContent":["(function (self) {\n    'use strict';\n\n    if (self.fetch) {\n        return\n    }\n\n    var support = {\n        searchParams: 'URLSearchParams' in self,\n        iterable: 'Symbol' in self && 'iterator' in Symbol,\n        blob: 'FileReader' in self && 'Blob' in self && (function () {\n            try {\n                new Blob()\n                return true\n            } catch (e) {\n                return false\n            }\n        })(),\n        formData: 'FormData' in self,\n        arrayBuffer: 'ArrayBuffer' in self\n    }\n\n    if (support.arrayBuffer) {\n        var viewClasses = [\n            '[object Int8Array]',\n            '[object Uint8Array]',\n            '[object Uint8ClampedArray]',\n            '[object Int16Array]',\n            '[object Uint16Array]',\n            '[object Int32Array]',\n            '[object Uint32Array]',\n            '[object Float32Array]',\n            '[object Float64Array]'\n        ]\n\n        var isDataView = function (obj) {\n            return obj && DataView.prototype.isPrototypeOf(obj)\n        }\n\n        var isArrayBufferView = ArrayBuffer.isView || function (obj) {\n            return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n        }\n    }\n\n    function normalizeName(name) {\n        if (typeof name !== 'string') {\n            name = String(name)\n        }\n        if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n            throw new TypeError('Invalid character in header field name')\n        }\n        return name.toLowerCase()\n    }\n\n    function normalizeValue(value) {\n        if (typeof value !== 'string') {\n            value = String(value)\n        }\n        return value\n    }\n\n    // Build a destructive iterator for the value list\n    function iteratorFor(items) {\n        var iterator = {\n            next: function () {\n                var value = items.shift()\n                return { done: value === undefined, value: value }\n            }\n        }\n\n        if (support.iterable) {\n            iterator[Symbol.iterator] = function () {\n                return iterator\n            }\n        }\n\n        return iterator\n    }\n\n    function Headers(headers) {\n        this.map = {}\n\n        if (headers instanceof Headers) {\n            headers.forEach(function (value, name) {\n                this.append(name, value)\n            }, this)\n        } else if (Array.isArray(headers)) {\n            headers.forEach(function (header) {\n                this.append(header[0], header[1])\n            }, this)\n        } else if (headers) {\n            Object.getOwnPropertyNames(headers).forEach(function (name) {\n                this.append(name, headers[name])\n            }, this)\n        }\n    }\n\n    Headers.prototype.append = function (name, value) {\n        name = normalizeName(name)\n        value = normalizeValue(value)\n        var oldValue = this.map[name]\n        this.map[name] = oldValue ? oldValue + ',' + value : value\n    }\n\n    Headers.prototype['delete'] = function (name) {\n        delete this.map[normalizeName(name)]\n    }\n\n    Headers.prototype.get = function (name) {\n        name = normalizeName(name)\n        return this.has(name) ? this.map[name] : null\n    }\n\n    Headers.prototype.has = function (name) {\n        return this.map.hasOwnProperty(normalizeName(name))\n    }\n\n    Headers.prototype.set = function (name, value) {\n        this.map[normalizeName(name)] = normalizeValue(value)\n    }\n\n    Headers.prototype.forEach = function (callback, thisArg) {\n        for (var name in this.map) {\n            if (this.map.hasOwnProperty(name)) {\n                callback.call(thisArg, this.map[name], name, this)\n            }\n        }\n    }\n\n    Headers.prototype.keys = function () {\n        var items = []\n        this.forEach(function (value, name) { items.push(name) })\n        return iteratorFor(items)\n    }\n\n    Headers.prototype.values = function () {\n        var items = []\n        this.forEach(function (value) { items.push(value) })\n        return iteratorFor(items)\n    }\n\n    Headers.prototype.entries = function () {\n        var items = []\n        this.forEach(function (value, name) { items.push([name, value]) })\n        return iteratorFor(items)\n    }\n\n    if (support.iterable) {\n        Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n    }\n\n    function consumed(body) {\n        if (body.bodyUsed) {\n            return Promise.reject(new TypeError('Already read'))\n        }\n        body.bodyUsed = true\n    }\n\n    function fileReaderReady(reader) {\n        return new Promise(function (resolve, reject) {\n            reader.onload = function () {\n                resolve(reader.result)\n            }\n            reader.onerror = function () {\n                reject(reader.error)\n            }\n        })\n    }\n\n    function readBlobAsArrayBuffer(blob) {\n        var reader = new FileReader()\n        var promise = fileReaderReady(reader)\n        reader.readAsArrayBuffer(blob)\n        return promise\n    }\n\n    function readBlobAsText(blob) {\n        var reader = new FileReader()\n        var promise = fileReaderReady(reader)\n        reader.readAsText(blob)\n        return promise\n    }\n\n    function readArrayBufferAsText(buf) {\n        var view = new Uint8Array(buf)\n        var chars = new Array(view.length)\n\n        for (var i = 0; i < view.length; i++) {\n            chars[i] = String.fromCharCode(view[i])\n        }\n        return chars.join('')\n    }\n\n    function bufferClone(buf) {\n        if (buf.slice) {\n            return buf.slice(0)\n        } else {\n            var view = new Uint8Array(buf.byteLength)\n            view.set(new Uint8Array(buf))\n            return view.buffer\n        }\n    }\n\n    function Body() {\n        this.bodyUsed = false\n\n        this._initBody = function (body) {\n            this._bodyInit = body\n            if (!body) {\n                this._bodyText = ''\n            } else if (typeof body === 'string') {\n                this._bodyText = body\n            } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n                this._bodyBlob = body\n            } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n                this._bodyFormData = body\n            } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n                this._bodyText = body.toString()\n            } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n                this._bodyArrayBuffer = bufferClone(body.buffer)\n                // IE 10-11 can't handle a DataView body.\n                this._bodyInit = new Blob([this._bodyArrayBuffer])\n            } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n                this._bodyArrayBuffer = bufferClone(body)\n            } else {\n                throw new Error('unsupported BodyInit type')\n            }\n\n            if (!this.headers.get('content-type')) {\n                if (typeof body === 'string') {\n                    this.headers.set('content-type', 'text/plain;charset=UTF-8')\n                } else if (this._bodyBlob && this._bodyBlob.type) {\n                    this.headers.set('content-type', this._bodyBlob.type)\n                } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n                    this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n                }\n            }\n        }\n\n        if (support.blob) {\n            this.blob = function () {\n                var rejected = consumed(this)\n                if (rejected) {\n                    return rejected\n                }\n\n                if (this._bodyBlob) {\n                    return Promise.resolve(this._bodyBlob)\n                } else if (this._bodyArrayBuffer) {\n                    return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n                } else if (this._bodyFormData) {\n                    throw new Error('could not read FormData body as blob')\n                } else {\n                    return Promise.resolve(new Blob([this._bodyText]))\n                }\n            }\n\n            this.arrayBuffer = function () {\n                if (this._bodyArrayBuffer) {\n                    return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n                } else {\n                    return this.blob().then(readBlobAsArrayBuffer)\n                }\n            }\n        }\n\n        this.text = function () {\n            var rejected = consumed(this)\n            if (rejected) {\n                return rejected\n            }\n\n            if (this._bodyBlob) {\n                return readBlobAsText(this._bodyBlob)\n            } else if (this._bodyArrayBuffer) {\n                return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n            } else if (this._bodyFormData) {\n                throw new Error('could not read FormData body as text')\n            } else {\n                return Promise.resolve(this._bodyText)\n            }\n        }\n\n        if (support.formData) {\n            this.formData = function () {\n                return this.text().then(decode)\n            }\n        }\n\n        this.json = function () {\n            return this.text().then(JSON.parse)\n        }\n\n        return this\n    }\n\n    // HTTP methods whose capitalization should be normalized\n    var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n    function normalizeMethod(method) {\n        var upcased = method.toUpperCase()\n        return (methods.indexOf(upcased) > -1) ? upcased : method\n    }\n\n    function Request(input, options) {\n        options = options || {}\n        var body = options.body\n\n        if (input instanceof Request) {\n            if (input.bodyUsed) {\n                throw new TypeError('Already read')\n            }\n            this.url = input.url\n            this.credentials = input.credentials\n            if (!options.headers) {\n                this.headers = new Headers(input.headers)\n            }\n            this.method = input.method\n            this.mode = input.mode\n            if (!body && input._bodyInit != null) {\n                body = input._bodyInit\n                input.bodyUsed = true\n            }\n        } else {\n            this.url = String(input)\n        }\n\n        this.credentials = options.credentials || this.credentials || 'omit'\n        if (options.headers || !this.headers) {\n            this.headers = new Headers(options.headers)\n        }\n        this.method = normalizeMethod(options.method || this.method || 'GET')\n        this.mode = options.mode || this.mode || null\n        this.referrer = null\n\n        if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n            throw new TypeError('Body not allowed for GET or HEAD requests')\n        }\n        this._initBody(body)\n    }\n\n    Request.prototype.clone = function () {\n        return new Request(this, { body: this._bodyInit })\n    }\n\n    function decode(body) {\n        var form = new FormData()\n        body.trim().split('&').forEach(function (bytes) {\n            if (bytes) {\n                var split = bytes.split('=')\n                var name = split.shift().replace(/\\+/g, ' ')\n                var value = split.join('=').replace(/\\+/g, ' ')\n                form.append(decodeURIComponent(name), decodeURIComponent(value))\n            }\n        })\n        return form\n    }\n\n    function parseHeaders(rawHeaders) {\n        var headers = new Headers()\n        // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n        // https://tools.ietf.org/html/rfc7230#section-3.2\n        var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n        preProcessedHeaders.split(/\\r?\\n/).forEach(function (line) {\n            var parts = line.split(':')\n            var key = parts.shift().trim()\n            if (key) {\n                var value = parts.join(':').trim()\n                headers.append(key, value)\n            }\n        })\n        return headers\n    }\n\n    Body.call(Request.prototype)\n\n    function Response(bodyInit, options) {\n        if (!options) {\n            options = {}\n        }\n\n        this.type = 'default'\n        this.status = options.status === undefined ? 200 : options.status\n        this.ok = this.status >= 200 && this.status < 300\n        this.statusText = 'statusText' in options ? options.statusText : 'OK'\n        this.headers = new Headers(options.headers)\n        this.url = options.url || ''\n        this._initBody(bodyInit)\n    }\n\n    Body.call(Response.prototype)\n\n    Response.prototype.clone = function () {\n        return new Response(this._bodyInit, {\n            status: this.status,\n            statusText: this.statusText,\n            headers: new Headers(this.headers),\n            url: this.url\n        })\n    }\n\n    Response.error = function () {\n        var response = new Response(null, { status: 0, statusText: '' })\n        response.type = 'error'\n        return response\n    }\n\n    var redirectStatuses = [301, 302, 303, 307, 308]\n\n    Response.redirect = function (url, status) {\n        if (redirectStatuses.indexOf(status) === -1) {\n            throw new RangeError('Invalid status code')\n        }\n\n        return new Response(null, { status: status, headers: { location: url } })\n    }\n\n    self.Headers = Headers\n    self.Request = Request\n    self.Response = Response\n\n    self.fetch = function (input, init) {\n        return new Promise(function (resolve, reject) {\n            var request = new Request(input, init)\n            var xhr = new XMLHttpRequest()\n\n            xhr.onload = function () {\n                var options = {\n                    status: xhr.status,\n                    statusText: xhr.statusText,\n                    headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n                }\n                options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n                var body = 'response' in xhr ? xhr.response : xhr.responseText\n                resolve(new Response(body, options))\n            }\n\n            xhr.onerror = function () {\n                reject(new TypeError('Network request failed'))\n            }\n\n            xhr.ontimeout = function () {\n                reject(new TypeError('Network request failed'))\n            }\n\n            xhr.open(request.method, request.url, true)\n\n            if (request.credentials === 'include') {\n                xhr.withCredentials = true\n            } else if (request.credentials === 'omit') {\n                xhr.withCredentials = false\n            }\n\n            if ('responseType' in xhr && support.blob) {\n                xhr.responseType = 'blob'\n            }\n\n            request.headers.forEach(function (value, name) {\n                xhr.setRequestHeader(name, value)\n            })\n\n            xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n        })\n    }\n    self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);"]}